{"version":3,"file":"static/js/782.5a70280a.chunk.js","mappings":"+PAIaA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAE,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,IAAAA,MAAA,SAAAQ,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMhC,OALIP,EAAG,sCAAAQ,OAAyCT,EAAE,YAC9CE,EAAe,IAAIQ,gBAAgB,CACvCC,QALY,mCAMZC,SAAU,QACVC,KAAM,MACNP,EAAAE,KAAA,EAEqBM,EAAAA,EAAAA,IAAU,GAADL,OAAIR,EAAG,KAAAQ,OAAIP,IAAgB,KAAD,EAA5C,OAARC,EAAQG,EAAAS,KAAAT,EAAAE,KAAA,EACKL,EAASC,KAAK,KAAD,EAAtB,OAAJA,EAAIE,EAAAS,KAAAT,EAAAE,KAAA,GACSJ,EAAKC,KAAK,KAAD,GAAlB,OAAJA,EAAIC,EAAAS,KAAAT,EAAAU,OAAA,SAEHX,GAAI,yBAAAC,EAAAW,OAAA,GAAAlB,EAAA,KACZ,gBAbwBmB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KCHzB,EAA2B,4BCA3B,EAA2B,6B,SCqC3B,MAjCA,SAAoBC,GAClB,IAAQrB,EAAsCqB,EAAtCrB,GAAIsB,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAEhC,OACEC,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAaC,SAAA,CAClCN,GACCO,EAAAA,EAAAA,KAAA,OACEC,IAAG,sCAAArB,OAAwCa,GAC3CS,IAAKR,EACLS,MAAO,IACPC,OAAQ,OAGVJ,EAAAA,EAAAA,KAAA,OACEC,IAAG,oHACHC,IAAK,yBACLC,MAAO,IACPC,OAAQ,OAGZJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,KACLE,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,cAAYJ,OAjBRxB,EAoBb,ECQA,MA/BA,SAAmBqB,GACjB,IAAQhB,EAASgB,EAAThB,KAER,OACEwB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SACzBvB,EAAK6B,KAAI,SAAAC,GAAK,OACbN,EAAAA,EAAAA,KAACO,EAAU,CACTpC,GAAImC,EAAMnC,GACVsB,aAAca,EAAMb,aACpBC,KAAMY,EAAMZ,KACZC,UAAWW,EAAMX,WACZW,EAAMnC,GACX,OAKZ,ECHA,MAfA,WACE,IAAMqC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BlC,EAAIoC,EAAA,GAAEE,EAAOF,EAAA,GAUpB,OARAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAGvB,OAHuBA,GAAAhD,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAM,EAAA,OAAAP,IAAAA,MAAA,SAAAQ,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBb,EAAa0C,EAASS,MAAMC,SAAS,KAAD,EAAjD1C,EAAIC,EAAAS,KACV4B,GAAOK,EAAAA,EAAAA,GAAK3C,IAAO,wBAAAC,EAAAW,OAAA,GAAAlB,EAAA,KACpB8C,EAAA1B,MAAA,KAAAC,UAAA,EAJc,WACSyB,EAAA1B,MAAC,KAADC,UAAA,CAIxB6B,EAEF,GAAG,KACIpB,EAAAA,EAAAA,KAAA,OAAAD,SAAMvB,IAAQwB,EAAAA,EAAAA,KAACqB,EAAS,CAAC7C,KAAMA,KACxC,C","sources":["api/getMovieCast.js","webpack://react-homework-template/./src/components/movieCast/MovieCast.module.css?f23c","webpack://react-homework-template/./src/components/singleCast/SingleCast.module.css?1cb9","components/singleCast/SingleCast.jsx","components/movieCast/MovieCast.jsx","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a06a593c7417d6d1323759d2907180c8';\n\nexport const getMovieCast = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n  });\n\n  const response = await axios.get(`${URL}?${searchParams}`);\n  const data = await response.data;\n  const cast = await data.cast;\n\n  return cast;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"MovieCast_castList__ibqG8\"};","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"SingleCast_castItem__hyrby\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './SingleCast.module.css';\n\nfunction SingleCast(props) {\n  const { id, profile_path, name, character } = props;\n\n  return (\n    <li key={id} className={css.castItem}>\n      {profile_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/original${profile_path}`}\n          alt={name}\n          width={132}\n          height={199}\n        />\n      ) : (\n        <img\n          src={`https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/No_picture_available.png/401px-No_picture_available.png`}\n          alt={'missing actor pictures'}\n          width={132}\n          height={199}\n        />\n      )}\n      <h3>{name}</h3>\n      <p>Character: {character}</p>\n    </li>\n  );\n}\n\nSingleCast.propTypes = {\n  id: PropTypes.number.isRequired,\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n\nexport default SingleCast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './MovieCast.module.css';\nimport SingleCast from 'components/singleCast/SingleCast';\n\nfunction MovieCast(props) {\n  const { cast } = props;\n\n  return (\n    <div>\n      <ul className={css.castList}>\n        {cast.map(actor => (\n          <SingleCast\n            id={actor.id}\n            profile_path={actor.profile_path}\n            name={actor.name}\n            character={actor.character}\n            key={actor.id}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMovieCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieCast;\n","import { useLocation } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\nimport { getMovieCast } from 'api/getMovieCast';\nimport MovieCast from 'components/movieCast/MovieCast';\n\nfunction Cast() {\n  const location = useLocation();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function fetchCast() {\n      const cast = await getMovieCast(location.state.movieId);\n      setCast([...cast]);\n    }\n    fetchCast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return <div>{cast && <MovieCast cast={cast} />}</div>;\n}\n\nexport default Cast;\n"],"names":["getMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","URL","searchParams","response","data","cast","_context","prev","next","concat","URLSearchParams","api_key","language","page","axios","sent","abrupt","stop","_x","apply","arguments","props","profile_path","name","character","_jsxs","className","css","children","_jsx","src","alt","width","height","map","actor","SingleCast","location","useLocation","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","_fetchCast","state","movieId","_toConsumableArray","fetchCast","MovieCast"],"sourceRoot":""}